/**
 * üöÄ MODELO DE DADOS (SCHEMA) - TAREFA
 * =========================================
 * * Este arquivo define a estrutura de uma "Tarefa" no banco de dados MongoDB.
 * Usamos o Mongoose para criar um schema que valida os dados e define
 * os tipos, valores padr√£o e outras regras para cada campo.
 */

const mongoose = require('mongoose');

// Defini√ß√£o do Schema da Tarefa
const taskSchema = new mongoose.Schema({
    titulo: {
        type: String,
        required: [true, 'O t√≠tulo da tarefa √© obrigat√≥rio.'], // Valida√ß√£o: campo obrigat√≥rio
        trim: true, // Remove espa√ßos em branco do in√≠cio e do fim
        maxlength: [100, 'O t√≠tulo n√£o pode ter mais de 100 caracteres.']
    },
    descricao: {
        type: String,
        trim: true,
        maxlength: [500, 'A descri√ß√£o n√£o pode ter mais de 500 caracteres.']
    },
    concluida: {
        type: Boolean,
        default: false // Valor padr√£o: a tarefa come√ßa como n√£o conclu√≠da
    },
    prioridade: {
        type: String,
        enum: ['Baixa', 'M√©dia', 'Alta'], // Valida√ß√£o: s√≥ permite esses valores
        default: 'M√©dia' // Valor padr√£o
    }
}, {
    
    user: {
        type: mongoose.Schema.Types.ObjectId, // Armazena o ID de um usu√°rio
        ref: 'User',                          // Refere-se ao modelo 'User'
        required: true                        // Toda tarefa deve ter um dono
    }
}, {
    timestamps: true // Adiciona automaticamente os campos `createdAt` e `updatedAt`
});

// Cria o modelo 'Task' a partir do schema
const Task = mongoose.model('Task', taskSchema);

// Exporta o modelo compilado, que cont√©m m√©todos como .find(), .create(), etc.
module.exports = Task;